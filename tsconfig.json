// Файл "tsconfig.json":
// - устанавливает корневой каталог проекта TypeScript;
// - выполняет настройку параметров компиляции;
// - устанавливает файлы проекта.
// Присутствие файла "tsconfig.json" в папке указывает TypeScript, что это корневая папка проекта.
// Внутри "tsconfig.json" указываются настройки компилятора TypeScript и корневые файлы проекта.
// Программа компилятора "tsc" ищет файл "tsconfig.json" сначала в папке, где она расположена, затем поднимается выше и ищет в родительских папках согласно их вложенности друг в друга.
// Команда "tsc --project C:\path\to\my\project\folder" берет файл "tsconfig.json" из папки, расположенной по данному пути.
// Файл "tsconfig.json" может быть полностью пустым, тогда компилятор скомпилирует все файлы с настройками заданными по умолчанию.
// Опции компилятора, перечисленные в командной строке перезаписывают собой опции, заданные в файле "tsconfig.json".
{
    "compileOnSave": true, // При значении true указывает используемой редактору кода производить компиляцию при каждом сохранении файлов TypeScript. Поддерживается не всеми редакторами кода.
    "compilerOptions": {
        "target": "es2017",
        "types": ["reflect-metadata"],
        "module": "commonjs",
        "moduleResolution": "node",
        "experimentalDecorators": true,
        "emitDecoratorMetadata": true,
        "noImplicitAny": true,
        "esModuleInterop": true,
        "removeComments": true,
        "preserveConstEnums": true,
        "sourceMap": true,
        "outDir": "build",
        "rootDir": "src",
        "resolveJsonModule": true
    },
    // Вместе с компиляцией только конкретных исходных файлов можно компилировать только файлы в заданных папках, которые будут найдены через регулярные выражения, которые принимают только следующие значения:
    // - букву или цифру;
    // - * - ноль или более любых символов, не включая разделители директорий "/" и "\";
    // - ? - один любой символ, не включая разделители директорий "/" и "\";
    // - **/ - рекурсивно включить любую подпапку.
    // Если путь до папки заканчивается так "*" или так ".*", тогда в ней будут скомплированы все файлы с расширениями .ts, .tsx, .d.ts, а также .js и .jsx, если опция "allowJs" будет равна true.
    "include": [
      // Секция "include" позволяет скомпилировать все файлы, находящиеся в заданных папках.
      // Если секция "files" и секция "include" заданы вместе, то будут скомпилированы только файлы, перечисленные в обеих секциях.
      // Все файлы, на которые есть ссылки во включенных файлах из секции "files" и секции "include", также скомпилируются.
      "src/**/*"
    ],
    "exclude": [
      // Секция "exclude" позволяет исключить при компиляции определенные файлы, которые находятся в заданных папках секции "include" или в папках всего проекта, если секция "include" не задана.
      // Компилятор не будет учитывать перечисленные в секции "exclude" файлы TypeScript, которые находятся в папках из секции "include".
      // Однако файлы, заданные в секции "files" будут обязательно скомпилированы.
      // Если секция "exclude" не указана, то по умолчанию будут исключаться из компиляции все файлы из папок:
      // - node_modules,
      // - bower_components,
      // - jspm_packages,
      // - файлы из папки, указанной в опции компилятора "outDir".
      "src/**/*.spec.ts",
      "node_modules"
    ]
  }